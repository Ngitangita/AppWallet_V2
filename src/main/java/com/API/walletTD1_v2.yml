openapi: 3.0.3
info:
  title: Wallet API
  version: 1.0.0
  description: Wallet_TD1_STD22047_STD22036
servers:
  - url: https://library.com
tags:
  - name: Account
  - name: Currency
  - name: Transaction
paths:
  /account:
    get:
      tags:
        - Account
      summary: Get all accounts
      description: Retrieve a list of all accounts in the wallet application, optionally filtered by accountName.
      operationId: getAccountAll
      responses:
        '200':
          description: Returned  list of  Account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/Response400'
        '403':
          $ref: '#/components/responses/Response403'
        '500':
          $ref: '#/components/responses/Response500'

    put:
      tags:
        - Account
      summary: Update accounts
      description: This can only be done by the logged-in accounts.
      operationId: updateAccountId
      parameters:
        - name: accountName
          in: path
          description: Name that needs to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent account in the the application wallet.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Returned  list of  Account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/Response400'
        '403':
          $ref: '#/components/responses/Response403'
        '500':
          $ref: '#/components/responses/Response500'

  /account/{id}:
    get:
      tags:
        - Account
      summary: Get one account by id
      description: Retrieve a list of one account in the wallet application, optionally filtered by accountName.
      operationId: getAccountId
      responses:
        '200':
          description: Returned  one of  Account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/Response400'
        '403':
          $ref: '#/components/responses/Response403'
        '500':
          $ref: '#/components/responses/Response500'

  /currency:
    get:
      tags:
        - Currency
      summary: Get all currencys
      description: Retrieve a list of all currency in the wallet application, optionally filtered by currency.
      operationId: getCurrencyAll
      responses:
        '200':
          description: Returned  list of  Currency
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
        '400':
          $ref: '#/components/responses/Response400'
        '403':
          $ref: '#/components/responses/Response403'
        '500':
          $ref: '#/components/responses/Response500'

    put:
        tags:
          - Currency
        summary: Update currencys
        description: This can only be done by the logged-in currency.
        operationId: updateCurrencyId
        parameters:
          - name: Currency
            in: path
            description: Name that needs to be update 
            required: true
            schema:
              type: string
        requestBody:
          description: Update an existent currency in the application wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
            application/xml:
              schema:
                $ref: '#/components/schemas/Currency'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Currency'
        responses:
          '200':
            description: Returned  list of  Currency
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Currency'
          '400':
            $ref: '#/components/responses/Response400'
          '403':
            $ref: '#/components/responses/Response403'
          '500':
            $ref: '#/components/responses/Response500'

  /currency/{id}:
    get:
      tags:
        - Currency
      summary: Get one currency by id
      description: Retrieve a list of one currency in the wallet application, optionally filtered by currency.
      operationId: getCurrencyId
      responses:
        '200':
          description: Returned  list of one Currency
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
        '400':
          $ref: '#/components/responses/Response400'
        '403':
          $ref: '#/components/responses/Response403'
        '500':
          $ref: '#/components/responses/Response500'

  /transaction:
    get:
      tags:
        - Transaction
      summary: Get all transactions
      description: Retrieve a list of all transaction in the wallet application, optionally filtered by transaction.
      operationId: getTransactionAll
      responses:
        '200':
          description: Returned  list of  Transaction
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/Response400'
        '403':
          $ref: '#/components/responses/Response403'
        '500':
          $ref: '#/components/responses/Response500'

components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          enum:
            - CURRENT_ACCOUNT
            - SAVINGS_ACCOUNT
        sold:
          type: number
        updateAt:
          type: string
          format: "date-time"
        properties:
          allOf:
            - $ref: "#/components/schemas/Transaction"
            - $ref: "#/components/schemas/Currency"
        Type:
          type: string
          enum:
            - BANK
            - CASH
            - MOBILE_MONEY

    Currency:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          enum:
            - ARIARY
            - EURO
        code: 
          type: string
          enum:
            - AR 
            - EUR 

    Transaction:
      type: object
      properties:
        id:
          type: integer
        label:
          type: string
        amount:
          type: number
        transactionDateTim:
          type: string
          format: "date-time"
        type:
          type: string
          enum:
            - DEBIT
            - CREDIT

  responses:
    Response400:
      description: Bad Request
      content:
        application/json:
          example:
            statusCode: 400
            message: "Bad Request"
            property: "Value of the property in the response body"

    Response403:
      description: Forbidden
      content:
        application/json:
          example:
            statusCode: 403
            message: "Forbidden"
            property: "Value of the property in the response body"

    Response500:
      description: Internal Server Error
      content:
        application/json:
          example:
            statusCode: 500
            message: "Internal Server Error"
            property: "Value of the property in the response body"